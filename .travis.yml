language: cpp
compiler: gcc
dist: bionic
osx_image: xcode10.3
sudo: required

notifications:
  email:
    recipients:
      - mchehab@kernel.org
    on_success: change
    on_failure: always

cache:
  directories:
    - $HOME/.ccache
    - $HOME/pbuilder-bases
    - $HOME/Library/Caches/Homebrew
    - $HOME/AppData/Local/Temp/chocolatey
    - /C/tools/msys64
  timeout: 1000

matrix:
  fast_finish: true
  include:
    - os: linux
      env: TARGET_OS=ubuntu-gtk2
      dist: bionic
    - os: linux
      env: TARGET_OS=ubuntu-gtk3
      dist: bionic
    - os: linux
      env: TARGET_OS=mingw-w64
      dist: bionic
    - os: linux
      env: TARGET_OS=debian-sid
      dist: bionic
    - os: linux
      compiler: clang
      env: TARGET_OS=debian-sid
      dist: bionic

    - os: windows
      env: TARGET_OS=pc DIRECT_SHOW="--with-directshow"
    - os: windows
      env: TARGET_OS=pc DIRECT_SHOW=""

    - os: osx
      env: TARGET_OS=mac
      # power jobs added.
    - os: linux
      env: TARGET_OS=ubuntu-gtk2
      dist: bionic
      arch: ppc64le
    - os: linux
      env: TARGET_OS=ubuntu-gtk3
      dist: bionic
      arch: ppc64le
    - os: linux
      env: TARGET_OS=mingw-w64
      dist: bionic
      arch: -ppc64le
    - os: linux
      env: TARGET_OS=debian-sid
      dist: bionic
      arch: -ppc64le
    - os: linux
      compiler: clang
      env: TARGET_OS=debian-sid
      dist: bionic
      arch: -ppc64le

    - os: windows
      env: TARGET_OS=pc DIRECT_SHOW="--with-directshow"
      arch: ppc64le
    - os: windows
      env: TARGET_OS=pc DIRECT_SHOW=""
      arch: ppc64le

    - os: osx
      env: TARGET_OS=mac
      arch: ppc64le
before_cache:
- rm -f $HOME/.cache/pip/log/debug.log
- >-
    if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
        $msys2 pacman --sync --clean --noconfirm;
        echo "--tcp-nodelay" >> ${APPDATA}/.curlrc;
    else
        ccache -s
    fi
# https://stackoverflow.com/a/53331571/1433768
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew cleanup; fi

before_install:
- >-
    case "$TRAVIS_OS_NAME" in
    "osx")
        brew update
        ;;
    "windows")
        [[ ! -f C:/tools/msys64/msys2_shell.cmd ]] && rm -rf C:/tools/msys64;
        choco uninstall -y mingw;
        choco upgrade -y msys2;
        export msys2='cmd //C RefreshEnv.cmd ';
        export msys2+='& set MSYS=winsymlinks:nativestrict ';
        export msys2+='& C:\\tools\\msys64\\msys2_shell.cmd -defterm -no-start';
        export shell="$msys2 -mingw64 -full-path -here -c \$\* --";
        export msys2+=" -msys2 -c \$\* --";
        $msys2 pacman --sync --noconfirm --disable-download-timeout --needed \
                mingw-w64-x86_64-toolchain
        $msys2 pacman -Syu --noconfirm --disable-download-timeout \
                autoconf libtool automake gettext make autoconf-archive pkg-config mingw-w64-x86_64-gnutls
        export PATH=/C/tools/msys64/mingw64/bin:$PATH
        export MAKE=mingw32-make;
        ;;
    *)  # Linux
        sudo apt-get update -qq
        ;;
    esac

install:
  - export MAKEFLAGS="-j `nproc`"
  - "${TRAVIS_BUILD_DIR}/travis/${TRAVIS_OS_NAME}.${TARGET_OS}.install"

script:
  - "${TRAVIS_BUILD_DIR}/travis/${TRAVIS_OS_NAME}.${TARGET_OS}.script"

after_failure:
# http://jsteemann.github.io/blog/2014/10/30/getting-core-dumps-of-failed-travisci-builds/
- coreFile=$(find . -maxdepth 1 -name "*core*" | head -n 1)
- >-
    if [[ -f "$coreFile" ]];
    then
        gdb -c "$coreFile" test \
            -ex "thread apply all bt" \
            -ex "set pagination 0" \
            -batch;
    fi
